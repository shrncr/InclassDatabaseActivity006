{
  "name": "inclassdatabaseactivity006",
  "version": "1.0.0",
  "description": "This is an in class activity for CSC 350, which covers inserting/updating and deleting content from a NoSQL database.\r ## Forking this repo (BLAH BLAH BLAH ... the same verbiage as earlier)\r To work on this project, you will need to create a personal copy of the repository. This is done by forking it. Follow these steps:\r ### 1. Fork repository\r - Click the “Fork” button located in the upper right corner of the repository page.\r - This will create a copy of the repository under your GitHub account. (only one in the project will do this!)\r ### 2. Clone Your Fork\r - On your GitHub account, navigate to your forked repository.\r - Clone the forked repository to your local machine.\r ### 3. Adding Collaborators\r - Add your project members in the same way as you would for a normal repository.\r - Go to `Settings`, `Collaborators` to add members to this repo.\r ### 4. New branch\r - ***VERY IMPORTANT*** -> Create a new branch before you make any changes to the forked repo!!\r - Once the branch is created, make the changes as per project requirements.\r - You can make as many commits and as many pushes as needed to that branch that was newly created.\r - To be consistent, use the same styling for commit messages that was given in the Project I.\r     - [Prefix] – [Short description of the change]\r       The following are the only possible options for [Prefix]:\r     - FEAT - For new features or major additions to the project.\r         - Example: `FEAT - Added contact form to the Contact page`\r     - FIX - For bug fixes, corrections, or revisions to the code.\r         - Example: `FIX - Corrected navigation bar alignment on mobile devices`\r     - STYLE - For stylistic changes such as formatting, CSS modifications, or minor visual updates.\r         - Example: `STYLE - Updated color scheme for better contrast`\r     - DOCS - For changes or additions to the documentation, including README files and comments in the code.\r         - Example: `DOCS - Added project description and setup instructions to README`\r     - SECURITY - For changes related to improving the security of the website.\r         - Example: `SECURITY - Implemented input validation for contact form`\r     - REFACTOR - For code refactoring that doesn’t change functionality but improves code quality or organization.\r         - Example: `REFACTOR - Organized CSS files and cleaned up redundant styles`\r     - TEST - For adding tests or making changes to the testing suite.\r         - Example: `TEST - Added validation tests for contact form input`",
  "main": "api.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "cors": "^2.8.5",
    "express": "^4.21.1",
    "mongodb": "^6.10.0",
    "mongoose": "^8.8.0"
  }
}
